package com.sd.farmework.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sd.farmework.common.HttpSessionProvider;
import com.sd.farmework.common.MD5Util;
import com.sd.farmework.common.util.StringUtil;
import com.sd.farmework.pojo.SysUserInfo;
import com.sd.farmework.service.SysUserInfoService;


/**
 * 用户登录
 * @author 王超超
 * 2016-10-26
 * 
 */

@Controller
@Scope("prototype")
@RequestMapping(value="/wx")
public class WXLoginController {
	private static Logger logger = Logger.getLogger(WXLoginController.class);
	@Autowired
	private SysUserInfoService userInfoService;

	
	
	/**
	 * 获取用户信息
	 * @return
	 */
	@RequestMapping(value = "/userLogin",method = RequestMethod.POST)
	@ResponseBody
	public Object  userLogin(HttpSession session,SysUserInfo user,Model model,HttpServletRequest request){
		logger.info("WXLoginController queryUser:start");
		String redirect_uri = request.getParameter("url");
		String[] param = null;
		String url = null;
		if(!StringUtil.isNullOrBlank(redirect_uri)){
			param = redirect_uri.split("=");
			url = ""+param[1];
		}
		try {
			SysUserInfo userinfo = (SysUserInfo)request.getSession().getAttribute("wxLoginUser");
			if(userinfo==null){
				SysUserInfo userout =null;
				MD5Util getMD5 = new MD5Util();
				String oldpwd=getMD5.GetMD5Code(request.getParameter("accountPwd"));
				user.setLoginPwd(oldpwd);
				userout = (SysUserInfo) userInfoService.query(user);
	 			if(userout==null){
					 userout=new SysUserInfo();
					 model.addAttribute("codeMsg", "用户名或密码错误");
					 return "login";
				}
	 			
	 			model.addAttribute("user",userout);
	 			request.getSession().setAttribute(HttpSessionProvider.CURRENT_USER_SESSION_KEY,userout);
			}else{
				model.addAttribute("user",userinfo);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			model.addAttribute("codeMsg", "登录失败，请稍后再试");
			return "login";
		}
		Map respMap = new HashMap();
		respMap.put("code", "000");
		respMap.put("redirect_uri", url);
		return respMap;
	}
	
}
